page = 1;
curScreen = 1;

function Previous(theForm, id) {
	page = Math.max(1, page - 1);
	if (page == 1)
		theForm.elements['Back'].disabled = true;
	var url = "/image.php?type=cart&id=" + id + "&size=1";
	if (page > 1)
		url += "&page=" + page;
	document.images['productimagethumb'].src = url;
	theForm.elements['Next'].disabled = false;
	document.getElementById('currPage').innerHTML = page;
}

function Forward(theForm, id, max) {
	page = Math.min(max, page + 1);
	if (page == max)
		theForm.elements['Next'].disabled = true;
	theForm.elements['Back'].disabled = false;
	document.images['productimagethumb'].src = "/image.php?type=cart&id=" + id + "&size=1&page=" + page;
	document.getElementById('currPage').innerHTML = page;
}

function changeScreen(theForm, theElement, turn, id, maxScreen) {
	curScreen += turn;
	if (curScreen <= 1) {
		curScreen = 1;
		theForm.elements['prevScreenButton'].disabled = true;
		theForm.elements['nextScreenButton'].disabled = false;
	}
	else if (curScreen >= maxScreen) {
		curScreen = maxScreen;
		theForm.elements['prevScreenButton'].disabled = false;
		theForm.elements['nextScreenButton'].disabled = true;
	}
	var url = "/image.php?type=screen&id=" + id;
	if (curScreen > 1)
		url += "&page=" + curScreen;
	theElement.style.backgroundImage = "url('" + url + "')";
	document.getElementById('currScreen').innerHTML = curScreen;
}

function loadReviews(page, id) {
	var xmlhttp = new XMLHttpRequest();

	xmlhttp.addEventListener("load", function() {
		document.getElementById("reviewDiv").innerHTML = xmlhttp.responseText;
	});
	xmlhttp.open("GET", "ajax/loadReviews.php?id=" + id + "&page=" + page, true);
	xmlhttp.send();
}

function showHashData(theObject) {
	var x = document.getElementsByClassName("goodHash");
	for (var i = 0; i < x.length; i++) {
		x[i].style.display = "table-row";
	}
	theObject.style.display = "none";
}

function showPopup(tooltipId) {
  var tooltip = document.getElementById(tooltipId);
  tooltip.style.display = '';
  document.addEventListener('keydown', function handler(event) {
    const key = event.key; // Or const {key} = event; in ES6+
    if (key === "Escape") {
      hidePopup(tooltipId);
      document.removeEventListener('keydown', handler);
    }
  });
}

function hidePopup(tooltipId) {
  var tooltip = document.getElementById(tooltipId);
  tooltip.style.display = 'none';
}

function setFormat(formId, value, theMedia) {
  if (value == -1) {
    showPopup('tooltip');
    document.getElementById('download_format').selectedIndex = 0;
    document.getElementById('download_format').onchange();
    return;
  }
  var theForm = document.forms[formId];
  if (!theForm) {
    return;
  }
  if (value == 0) {
    theForm.elements['alt'].disabled = true;
  } else {
    theForm.elements['alt'].disabled = false;
  }
  theForm.elements['alt'].value = value;
  setMediaId(formId, allMedia);
}

function showMagnet(format, theMedia) {
  showRow('magnet-row', theMedia != null && theMedia['Magnet'] && format == 0);
}

function setDisc(formId, value, theMedia) {
  document.forms[formId]['mediaId'].value = value;
  showSize(formId, theMedia);
}

function showSize(format, theMedia) {
  if (theMedia == null) {
    document.getElementById('download_size').innerHTML = '';
  } else if (format == '0') {
    document.getElementById('download_size').innerHTML = theMedia['ZippedText'];
  } else if (format == '1') {
    document.getElementById('download_size').innerHTML = theMedia['AltZippedText'];
  } else {
    document.getElementById('download_size').innerHTML = theMedia['AltZipped2Text'];
  }
}

function showHashes(formId, theMedia) {
  if (document.getElementById('data-good-title') && theMedia != null) {
    document.getElementById('data-good-title').innerHTML = theMedia['GoodTitle'];
    if (document.getElementById('data-crc')) {
      if (theMedia != null && theMedia['Crc']) {
        document.getElementById('data-crc').innerHTML = theMedia['Crc'].toLowerCase();
        document.getElementById('data-md5').innerHTML = theMedia['Md5'].toLowerCase();
        document.getElementById('data-sha1').innerHTML = theMedia['Sha1'].toLowerCase();
        document.getElementById('row-date').style.display = theMedia['GoodDate'] ? '' : 'none';
        document.getElementById('data-date').innerHTML = theMedia['GoodDate'] ? theMedia['GoodDate']['date'].split(" ", 2)[0] : '';
      } else if (theMedia != null && theMedia['GoodHash']) {
        document.getElementById('data-crc').innerHTML = theMedia['GoodHash'].toLowerCase();
        document.getElementById('data-md5').innerHTML = theMedia['GoodMd5'].toLowerCase();
        document.getElementById('data-sha1').innerHTML = theMedia['GoodSha1'].toLowerCase();
        document.getElementById('row-date').style.display = theMedia['GoodDate'] ? '' : 'none';
        document.getElementById('data-date').innerHTML = theMedia['GoodDate'] ? theMedia['GoodDate']['date'].split(" ", 2)[0] : '';
      } else {
        document.getElementById('data-crc').innerHTML = '';
        document.getElementById('data-md5').innerHTML = '';
        document.getElementById('data-sha1').innerHTML = '';
        document.getElementById('row-date').style.display = 'none';
        document.getElementById('data-date').innerHTML = '';
      }
    }
  }
}

function showHashTable(mediaId, tooltipId) {
  var content = document.getElementById(tooltipId + "-content");
  content.innerHTML = 'Loading...';
  content.style.cursor = "wait";

  var xmlhttp = new XMLHttpRequest();
  xmlhttp.addEventListener("load", function() {
    content.innerHTML = xmlhttp.responseText;
    content.style.cursor = "auto";
  });
  xmlhttp.open("GET", "ajax/hashes.php?id=" + mediaId, true);
  xmlhttp.send();

  showPopup(tooltipId);
  document.getElementById(tooltipId).style.display = 'flex';
}